<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.innon.education.library.mapper.document-mapper" >
    <!-- 문서 등록 -->
    <insert id="saveDocument" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.innon.education.library.document.repasitory.entity.DocumentEntity">
        INSERT INTO tb_document (
            title,
        use_flag,
            document_num,
            dept_cd,
            dept_nm,
            group_id,
            write_user_id,
            write_year,
            write_date,
            document_cnt,
        <if test="binder != null">
            binder,
        </if>
        <if test="qr_code != null and qr_code != ''">
            qr_code,
        </if>
            machineNo,
            test_num,
        <if test="doc_code != null and doc_code != ''">
            doc_code,
        </if>

        <if test="expire_date != null and expire_date != ''">
            expire_date,
        </if>
            reg_user_id,
            reg_date
        ) VALUES (
            #{title},
            #{use_flag},
            #{document_num},
            #{dept_cd},
            #{dept_nm},
            #{group_id},
            #{write_user_id},
            #{write_year},
        <choose>
            <when test="write_date != null and write_date != ''">
                #{write_date},
            </when>
            <otherwise>
                getDate(),
            </otherwise>
        </choose>

            #{document_cnt},
        <if test="binder != null">
            #{binder},
        </if>
        <if test="qr_code != null and qr_code != ''">
            #{qr_code},
        </if>
            #{machineNo},
            #{test_num},
        <if test="doc_code != null and doc_code != ''">
            #{doc_code},
        </if>

        <if test="expire_date != null and expire_date != ''">
            #{expire_date},
        </if>
            #{reg_user_id},
            getDate()
        )
    </insert>
    <select id="saveDocument_back"
            parameterType="com.innon.education.library.document.repasitory.entity.DocumentEntity"
            resultType="hashMap">
        DECLARE @id INT, @status VARCHAR(20)
        IF NOT EXISTS (
           SELECT id
             FROM tb_document
            WHERE 1=1
            <if test="document_num != null and document_num != ''">
              AND document_num = #{document_num}
            </if>
            <if test="document_cnt != null and document_cnt != ''">
              AND document_cnt = #{document_cnt}
            </if>
            <if test="document_num == null">
              AND document_num IS NULL
            </if>
            <if test="document_num == ''">
              AND document_num = ''
            </if>
              AND title = #{title}
        )
        BEGIN
            INSERT INTO tb_document (
                title,
                reg_user_id,
                code_id,
                reg_date,
                document_num,
            <if test="confirm_date != null">
                confirm_date,
            </if>
            <if test="write_year != null and write_year != ''">
                write_year,
            </if>
            <if test="write_date != null and write_date != ''">
                write_date,
            </if>
            <if test="document_cnt != null and document_cnt != ''">
                document_cnt,
            </if>
            <if test="dept_cd != null and dept_cd != ''">
                dept_cd,
            </if>
            <if test="dept_nm != null and dept_nm != ''">
                dept_nm,
            </if>
            <if test="revised_num != null and revised_num != ''">
                revised_num,
            </if>
            <if test="binder != null and binder > 0">
                binder,
            </if>
            <if test="machineNo != null and machineNo > 0">
                machineNo,
            </if>
                plant_cd
            ) VALUES (
                #{title},
                #{reg_user_id},
                #{code_id},
                getDate(),
                #{document_num},
            <if test="confirm_date != null">
                #{confirm_date},
            </if>
            <if test="write_year != null and write_year != ''">
                #{write_year},
            </if>
            <if test="write_date != null and write_date != ''">
                #{write_date},
            </if>
            <if test="document_cnt != null and document_cnt != ''">
                #{document_cnt},
            </if>
            <if test="dept_cd != null and dept_cd != ''">
                #{dept_cd},
            </if>
            <if test="dept_nm != null and dept_nm != ''">
                #{dept_nm},
            </if>
            <if test="revised_num != null and revised_num != ''">
                #{revised_num},
            </if>
            <if test="binder != null and binder > 0">
                #{binder},
            </if>
            <if test="machineNo != null and machineNo > 0">
                #{machineNo},
            </if>
                #{plant_cd}
            )
            SELECT @id = SCOPE_IDENTITY(), @status = 'INSERT'
        END
        ELSE
        BEGIN
            SELECT @id = id
                 , @status = 'SELECT'
              FROM tb_document
             WHERE 1=1
             <if test="document_num != null and document_num != ''">
               AND document_num = #{document_num}
             </if>
             <if test="document_cnt != null and document_cnt != ''">
               AND document_cnt = #{document_cnt}
             </if>
             <if test="document_num == null">
               AND document_num IS NULL
             </if>
             <if test="document_num == ''">
               AND document_num = ''
             </if>
               AND title = #{title}
        END
        SELECT @id AS id, @status AS status
    </select>

    <!-- 문서 목록 조회 -->
    <select id="findDocumentList" fetchSize="2000"
            parameterType="com.innon.education.library.document.repasitory.entity.DocumentSearchEntity"
            resultType="com.innon.education.library.document.repasitory.dto.DocumentDTO">
        WITH tb_location_CTE AS (
            SELECT location_code,
                   parent_code,
                   location_name,
                   CONVERT(VARCHAR(500), location_name) AS NM_PATH
              FROM tb_location WITH(NOLOCK)
             WHERE depth_level = 0
             UNION ALL
            SELECT tl.location_code,
                   tl.parent_code,
                   tl.location_name,
                   CONVERT(VARCHAR(500), tlc.NM_PATH + '-' + tl.location_name) AS NM_PATH
              FROM tb_location tl
             INNER JOIN tb_location_CTE tlc
                ON tlc.location_code = tl.parent_code
        )
        SELECT td.id
             , td.code_id
             , td.document_num
             , td.title
             , td.use_flag
             , IIF(td.use_flag = 'Y', '사용', '미사용') AS use_flag_nm
             , td.reg_user_id AS sys_reg_user_id
             , td.write_year
             , CONVERT(CHAR(10), td.write_date, 23) AS write_date
             , td.write_user_id
             , w_ei.user_nm  AS write_user_nm
             , td.document_cnt
             , td.qr_code
             , td.reg_date AS sys_reg_date
             , CONVERT(CHAR(10), td.reg_date, 23) AS convert_reg_date
             , tdl.status
             , tps.id AS plan_sign_id
--              , CASE WHEN tps.id IS NOT NULL THEN (
--                         SELECT discription
--                           FROM tb_code
--                          WHERE code_name = tps.signform AND delete_at != 'Y'
--                     )
--                     WHEN tdl.status IS NULL THEN '미입고'
--                     ELSE (
--                         SELECT discription
--                           FROM tb_code
--                          WHERE code_name = tdl.status AND delete_at != 'Y'
--                     )
--                 END AS status_nm
                , CASE WHEN tdl.status IS NULL THEN '미입고'
                ELSE (
                SELECT discription
                FROM tb_code
                WHERE code_name = tdl.status AND delete_at != 'Y'
                )
                END AS status_nm
             , ROW_NUMBER() OVER (ORDER BY td.id desc) AS ROW_NO
             , td.dept_cd
             , td.dept_nm
             , td.group_id
             , tdl.req_user_id
             , + ' [' + ed.dept_nm + ']'+ei.user_nm AS req_user_nm
             , tld.display_user_id
             , tld.display_date
             , CONVERT(CHAR(10), tld.display_date, 23) AS convert_display_date
             , tl.parent_code
--              , dbo.FN_TAR_LOCATION_NAME(tl.location_code,'','>' )  as location_name
             , tlc.NM_PATH AS location_name
             , tl.location_code
             , tl.short_name
             , td.binder
             , CONVERT(CHAR(10), td.confirm_date, 23) as confirm_date
             , td.machineNo
             , td.doc_code
             , (SELECT title FROM tb_group WHERE id = td.group_id) AS group_nm
             , ISNULL(CONVERT(CHAR(10), td.expire_date, 23), '영구보관') AS expire_date
             <!-- , ISNULL(CONVERT(CHAR(10), td.expire_date, 23), '9999-12-31') AS expire_date -->
             , td.id AS d_id
             , DATEDIFF(DAY, tdl.current_end_date, getDate()) * -1 AS current_diff_date
             , CONVERT(CHAR(10), tdl.current_end_date, 23) AS current_end_date
             , CONVERT(CHAR(10), tdl.current_start_date, 23) AS current_start_date
             , COUNT(*) OVER() AS total_cnt
          FROM tb_document td
          LEFT JOIN tb_location_document tld
            ON (td.id = tld.document_id) and tld.delete_at != 'Y'
          LEFT JOIN tb_location tl
            ON (tld.location_id = tl.id)
          LEFT JOIN tb_document_loan tdl
            ON (td.id = tdl.d_id) and tdl.delete_at !='Y'
          LEFT JOIN (
            SELECT MAX(tps.id) AS id
                 , (SELECT signform FROM tb_plan_sign WHERE id = MAX(tps.id)) AS signform
                 , tps.plan_id
              FROM TB_PLAN_SIGN tps
              JOIN tb_plan_sign_manager tpsm
                ON tps.id = tpsm.plan_sign_id
             WHERE tpsm.state = 'coms11004'
             GROUP BY tps.plan_id
          ) AS tps ON (tps.plan_id = td.id)
          LEFT JOIN edu_insa ei
            ON (ei.user_id = tdl.req_user_id)
        LEFT JOIN EDU_INSA w_ei
        ON w_ei.user_id = td.write_user_id
        LEFT JOIN edu_dept ed
        ON (ei.dept_cd = ed.dept_cd)
        LEFT JOIN tb_location_CTE tlc
        ON (tl.location_code = tlc.location_code)
        <where>
            <choose>
                <when test="group_id != null and group_id > 0">
                    AND td.group_id = #{group_id}
                </when>
                <otherwise>
                    <if test="groupList != null and groupList.size != 0">
                        AND td.group_id IN
                        <foreach collection="groupList" item="group" separator="," open="(" close=")">
                            #{group.id}
                        </foreach>
                    </if>
                </otherwise>
            </choose>
            <if test="document_status != null and document_status != ''">
                <choose>
                    <when test="document_status == 'docs11006'">
                        AND tps.signform = 'comi2s1'
                    </when>
                    <when test="document_status == 'docs11007'">
                        AND tps.signform = 'comi2s3'
                    </when>
                    <when test="document_status == 'docs11008'">
                        AND tps.signform = 'comi2s2'
                    </when>
                    <otherwise>
                        <!-- AND tdl.status = #{document_status} -->
                        AND tdl.status IN (SELECT value FROM string_split(#{document_status}, ',')) <!-- 'docs11001,docs11003,docs11006,docs11007' : 대출/입구/대출신청/연장신청 -->
                    </otherwise>
                </choose>
                <if test="document_status == 'docs11005' ">
                    or CONVERT(CHAR(10), getDate(), 23) >= CONVERT(CHAR(10),td.expire_date, 23)
                </if>
                <if test="document_status == 'popup' ">
                    or  tdl.status in ('docs11003', 'docs11004' )
                </if>
            </if>
            <if test="location_code != null and location_code != ''">
                AND tl.location_code LIKE CONCAT('%', #{location_code}, '%')
            </if>
            <if test="doc_code != null and doc_code != ''">
                AND td.doc_code = #{doc_code}
            </if>
            <if test="id != null and id > 0">
                AND td.id = #{id}
            </if>
            <if test="title != null and title != ''">
                AND td.title LIKE CONCAT('%', #{title}, '%')
            </if>
            <if test="code_id != null and code_id != ''">
                AND td.code_id = #{code_id}
            </if>
            <if test="document_num != null and document_num != ''">
                AND td.document_num LIKE CONCAT('%', #{document_num}, '%')
            </if>
            <if test="reg_user_id != null and reg_user_id != ''">
                AND td.reg_user_id LIKE CONCAT('%', #{reg_user_id}, '%')
            </if>
            <if test="reg_date != null and reg_date != ''">
                AND td.reg_date LIKE CONCAT('%', #{reg_date}, '%')
            </if>
            <if test="display_date_start != null and display_date_start != ''">
                AND tld.display_date >= #{display_date_start}
            </if>
            <if test="display_date_end != null and display_date_end != ''">
                AND tld.display_date <![CDATA[<]]> DATEADD(DAY, 1, CONVERT(DATE, #{display_date_end}))
            </if>
            <if test="write_date_start != null and write_date_start != ''">
                AND td.write_date >= #{write_date_start}
            </if>
            <if test="write_date_end != null and write_date_end != ''">
                AND td.write_date <![CDATA[<]]> DATEADD(DAY, 1, CONVERT(DATE, #{write_date_end}))
            </if>
            <if test="use_flag != null and !use_flag.equals('\u0000')">
                AND td.use_flag = #{use_flag}
            </if>
            <if test="expire_date_start != null and expire_date_start != ''">
                AND td.expire_date >= #{expire_date_start}
            </if>
            <if test="expire_date_end != null and expire_date_end != ''">
                AND td.expire_date <![CDATA[<]]> DATEADD(DAY, 1, CONVERT(DATE, #{expire_date_end}))
            </if>
            <choose>
                <when test="search_txt != null and search_txt != ''">
                    <choose>
                        <when test="search_type != null and search_type != ''">
                            <choose>
                                <when test="search_type.equals('req_user_nm')">
                                    AND ei.user_nm LIKE CONCAT('%', #{search_txt}, '%')
                                </when>
                                <otherwise>
                                    AND ${search_type} LIKE CONCAT('%', #{search_txt}, '%')
                                </otherwise>
                            </choose>
                        </when>
                        <otherwise>
                            AND (td.title LIKE CONCAT('%', #{search_txt}, '%')
                            OR td.document_num LIKE CONCAT('%', #{search_txt}, '%')
                            OR td.reg_user_id LIKE CONCAT('%', #{search_txt}, '%')
                            OR ei.user_nm LIKE CONCAT('%', #{search_txt}, '%'))
                        </otherwise>
                    </choose>
                </when>
            </choose>
        </where>
         ORDER BY td.id desc
        <if test="page != null">
         OFFSET #{page.page_size} * (#{page.page_no} - 1) ROW
         FETCH NEXT #{page.page_size} ROW ONLY
        </if>
    </select>

    <!-- 입고관리 목록 조회 -->
    <select id="findDocumentLoanList"
            parameterType="com.innon.education.library.document.repasitory.entity.DocumentSearchEntity"
            resultType="com.innon.education.library.document.repasitory.dto.DocumentDTO">
        SELECT td.id
             , tdl.d_id
             , td.title
             , td.document_num
             , td.reg_user_id
             , tps.signform
             , (SELECT discription FROM tb_code WHERE code_name = tps.signform AND delete_at != 'Y') AS signform_nm
             , tps.req_date
             , tdl.status
             , CASE WHEN tps.id IS NOT NULL THEN (
                        SELECT discription
                          FROM tb_code
                         WHERE code_name = tps.signform AND delete_at != 'Y'
                    )
                    WHEN tdl.status IS NULL THEN '미입고'
                    ELSE (
                        SELECT discription
                          FROM tb_code
                         WHERE code_name = tdl.status AND delete_at != 'Y'
                    )
                END AS status_nm
             , CONVERT(CHAR(10), tdl.current_start_date, 23) AS current_start_date
             , CONVERT(CHAR(10), tdl.current_end_date, 23) AS current_end_date
             , DATEDIFF(DAY, tdl.current_end_date, getDate()) * -1 AS current_diff_date
             , tdl.req_user_id
             , (SELECT user_nm FROM edu_insa WHERE user_id = tdl.req_user_id) AS req_user_nm
             , tld.location_id
             , tld.display_user_id
             , tld.display_date
             , CONVERT(CHAR(10), tld.display_date, 23) AS convert_display_date
             , CONVERT(CHAR(10), td.confirm_date, 23) AS confirm_date
             , tl.parent_code
             , tl.location_name
             , tl.location_code
             , tl.order_num
             , td.write_user_id
             , (SELECT user_nm FROM edu_insa WHERE user_id = td.write_user_id) AS write_user_nm
             , td.write_year
             , CONVERT(CHAR(10), td.write_date, 23) AS write_date
             , td.document_cnt
             , td.binder
             , td.group_id
             , td.dept_nm
             , td.dept_cd
             , tl.short_name
             , tl.depth_level
             , tl.sys_reg_date
             , td.qr_code
             , td.machineNo
             , CONVERT(CHAR(10), td.reg_date, 23) AS convert_reg_date
             , td.doc_code
             , (SELECT title FROM tb_group WHERE id = td.group_id) AS group_nm
             , CONVERT(CHAR(10), td.expire_date, 23) AS expire_date
             , tps.id AS plan_sign_id
             , ROW_NUMBER() OVER (ORDER BY tdl.d_id) AS ROW_NO
             , tps.req_date
             , COUNT(*) OVER() AS total_cnt
          FROM tb_document_loan tdl
          LEFT JOIN tb_document td
            ON (tdl.d_id = td.id)
          LEFT JOIN tb_location_document tld
            ON (tdl.d_id = tld.document_id) and tld.delete_at != 'Y'
          LEFT JOIN tb_location tl
            ON (tl.id = tld.location_id)
          LEFT JOIN (
                SELECT MAX(tps.id) AS id
                     , (SELECT signform FROM tb_plan_sign WHERE id = MAX(tps.id)) AS signform
                     , tps.plan_id
                     , (
                        SELECT CONVERT(CHAR(10), sys_reg_date, 23)
                          FROM tb_plan_sign
                         WHERE id = MAX(tps.id)
                     ) AS req_date
                  FROM TB_PLAN_SIGN tps
                  JOIN tb_plan_sign_manager tpsm
                    ON tps.id = tpsm.plan_sign_id
                 WHERE tpsm.state = 'coms11004'
                 GROUP BY tps.plan_id
          ) AS tps ON (tps.plan_id = td.id)
        <where>
            and tdl.delete_at !='Y'
            <choose>
                <when test="group_id != null and group_id > 0">
                    AND td.group_id = #{group_id}
                </when>
                <otherwise>
                    <if test="groupList != null and groupList.size != 0">
                        AND td.group_id IN
                        <foreach collection="groupList" item="group" separator="," open="(" close=")">
                            #{group.id}
                        </foreach>
                    </if>
                </otherwise>
            </choose>
            <if test="title != null and title != ''">
                AND td.title LIKE CONCAT('%', #{title}, '%')
            </if>
            <if test="document_num != null and document_num != ''">
                AND td.document_num LIKE CONCAT('%', #{document_num}, '%')
            </if>
            <if test="status_nm != null and status_nm != ''">
                AND (SELECT short_name FROM tb_code WHERE code_name = tdl.status) LIKE CONCAT('%', #{status_nm}, '%')
            </if>
            <if test="reg_user_id != null and reg_user_id != ''">
                AND td.reg_user_id = #{reg_user_id}
            </if>
            <if test="reg_date != null and reg_date != ''">
                AND td.reg_date LIKE CONCAT('%', #{reg_date}, '%')
            </if>
            <if test="status != null and status != ''">
                AND tdl.status = #{status}
            </if>
            <if test="group_id != null and group_id > 0">
                AND td.group_id = #{group_id}
            </if>
            <if test="req_user_id != null and req_user_id != ''">
                AND tdl.req_user_id = #{req_user_id}
            </if>
            <if test="display_user_id != null and display_user_id != ''">
                AND tld.display_user_id = #{display_user_id}
            </if>
            <if test="location_name != null and location_name != ''">
                AND tl.location_name = #{location_name}
            </if>
            <if test="short_name != null and short_name != ''">
                AND tl.short_name = #{short_name}
            </if>
            <if test="signform != null and signform != ''">
                AND tps.signform = #{signform}
            </if>
            <if test="req_date_start != null and req_date_start != ''">
                AND tps.req_date >= #{req_date_start}
            </if>
            <if test="req_date_end != null and req_date_end != ''">
                AND tps.req_date <![CDATA[<]]> DATEADD(DAY, 1, CONVERT(DATE, #{req_date_end}))
            </if>
            <choose>
                <when test="search_txt != null and search_txt != ''">
                    <choose>
                        <when test="search_type != null and search_type != ''">
                            <choose>
                                <when test="search_type.equals('doc_title')">
                                    AND td.title LIKE CONCAT('%', #{search_txt}, '%')
                                </when>
                                <otherwise>
                                    AND ${search_type} LIKE CONCAT('%', #{search_txt}, '%')
                                </otherwise>
                            </choose>
                        </when>
                        <otherwise>
                            <choose>
                                <when test="view_nm.equals('mypage')">
                                    AND (td.title LIKE CONCAT('%', #{search_txt}, '%')
                                    OR td.doc_code LIKE CONCAT('%', #{search_txt}, '%'))
                                </when>
                                <otherwise>
                                    AND (td.title LIKE CONCAT('%', #{search_txt}, '%')
                                    OR td.document_num LIKE CONCAT('%', #{search_txt}, '%')
                                    OR td.reg_user_id LIKE CONCAT('%', #{search_txt}, '%'))
                                </otherwise>
                            </choose>
                        </otherwise>
                    </choose>
                </when>
                <otherwise>

                </otherwise>
            </choose>
        </where>
         ORDER BY tdl.d_id
        <if test="page != null">
        OFFSET #{page.page_size} * (#{page.page_no} - 1) ROW
         FETCH NEXT #{page.page_size} ROW ONLY
        </if>
    </select>

    <!-- 입고관리 목록 갯수 조회 -->
    <select id="findDocumentNo"
            parameterType="com.innon.education.library.document.repasitory.entity.DocumentSearchEntity"
            resultType="com.innon.education.library.document.repasitory.dto.DocumentDTO">
        select top 1 document_num
        from tb_document
        <where>
            <if test="document_num != null and document_num !=''">
                and document_num LIKE #{document_num} + '%'
            </if>
        </where>
        order by id desc
    </select>
    <!-- 입고관리 목록 갯수 조회 -->
    <select id="findDocumentLoanListCnt"
            parameterType="com.innon.education.library.document.repasitory.entity.DocumentSearchEntity"
            resultType="int">
        SELECT COUNT(tdl.d_id)
          FROM tb_document_loan tdl
         INNER JOIN tb_document td
            ON (tdl.d_id = td.id)
         INNER JOIN tb_location_document tld
            ON (tdl.d_id = tld.document_id) and tld.delete_at != 'Y'
          LEFT JOIN tb_location tl
            ON (tl.id = tld.location_id)
          LEFT JOIN (
            SELECT MAX(tps.id) AS id
                 , (SELECT signform FROM tb_plan_sign WHERE id = MAX(tps.id)) AS signform
                 , tps.plan_id
                 , (
                    SELECT CONVERT(CHAR(10), sys_reg_date, 23)
                      FROM tb_plan_sign
                     WHERE id = MAX(tps.id)
                 ) AS req_date
             FROM TB_PLAN_SIGN tps
             JOIN tb_plan_sign_manager tpsm
               ON tps.id = tpsm.plan_sign_id
            WHERE tpsm.state = 'coms11004'
            GROUP BY tps.plan_id
          ) AS tps ON (tps.plan_id = td.id)
        <where>
            and tdl.delete_at !='Y'
            <choose>
                <when test="group_id != null and group_id > 0">
                    AND td.group_id = #{group_id}
                </when>
                <otherwise>
                    <if test="groupList != null and groupList.size != 0">
                        AND td.group_id IN
                        <foreach collection="groupList" item="group" separator="," open="(" close=")">
                            #{group.id}
                        </foreach>
                    </if>
                </otherwise>
            </choose>
            <if test="title != null and title != ''">
                AND td.title LIKE CONCAT('%', #{title}, '%')
            </if>
            <if test="document_num != null and document_num != ''">
                AND td.document_num LIKE CONCAT('%', #{document_num}, '%')
            </if>
            <if test="status_nm != null and status_nm != ''">
                AND (SELECT short_name FROM tb_code WHERE code_name = tdl.status) LIKE CONCAT('%', #{status_nm}, '%')
            </if>
            <if test="reg_user_id != null and reg_user_id != ''">
                AND td.reg_user_id = #{reg_user_id}
            </if>
            <if test="reg_date != null and reg_date != ''">
                AND td.reg_date LIKE CONCAT('%', #{reg_date}, '%')
            </if>
            <if test="status != null and status != ''">
                AND tdl.status = #{status}
            </if>
            <if test="group_id != null and group_id > 0">
                AND td.group_id = #{group_id}
            </if>
            <if test="req_user_id != null and req_user_id != ''">
                AND tdl.req_user_id = #{req_user_id}
            </if>
            <if test="display_user_id != null and display_user_id != ''">
                AND tld.display_user_id = #{display_user_id}
            </if>
            <if test="location_name != null and location_name != ''">
                AND tl.location_name = #{location_name}
            </if>
            <if test="short_name != null and short_name != ''">
                AND tl.short_name = #{short_name}
            </if>
            <if test="signform != null and signform != ''">
                AND tps.signform = #{signform}
            </if>
            <if test="req_date_start != null and req_date_start != ''">
                AND tps.req_date >= #{req_date_start}
            </if>
            <if test="req_date_end != null and req_date_end != ''">
                AND tps.req_date <![CDATA[<=]]> #{req_date_end}
            </if>
            <choose>
                <when test="search_txt != null and search_txt != ''">
                    <choose>
                        <when test="search_type != null and search_type != ''">
                            <choose>
                                <when test="search_type.equals('doc_title')">
                                    AND td.title LIKE CONCAT('%', #{search_txt}, '%')
                                </when>
                                <otherwise>
                                    AND ${search_type} LIKE CONCAT('%', #{search_txt}, '%')
                                </otherwise>
                            </choose>
                        </when>
                        <otherwise>
                            <choose>
                                <when test="view_nm.equals('mypage')">
                                    AND (td.title LIKE CONCAT('%', #{search_txt}, '%')
                                    OR td.doc_code LIKE CONCAT('%', #{search_txt}, '%'))
                                </when>
                                <otherwise>
                                    AND (td.title LIKE CONCAT('%', #{search_txt}, '%')
                                    OR td.document_num LIKE CONCAT('%', #{search_txt}, '%')
                                    OR td.reg_user_id LIKE CONCAT('%', #{search_txt}, '%'))
                                </otherwise>
                            </choose>
                        </otherwise>
                    </choose>
                </when>
                <otherwise>

                </otherwise>
            </choose>
        </where>
    </select>

    <!-- 문서신청 -->
    <select id="saveDocumentApply"
            parameterType="com.innon.education.library.document.repasitory.entity.DocumentApplyEntity"
            resultType="int">
        DECLARE @id INT
        IF NOT EXISTS (
            SELECT id
              FROM tb_document_loan
             WHERE d_id = #{document_id} and delete_at !='Y'
        )
        BEGIN
            INSERT INTO tb_document_loan (
                d_id,
                status,
                req_user_id
            ) VALUES (
                #{document_id},
                #{status},
                #{req_user_id}
            )
            SELECT @id = SCOPE_IDENTITY()
        END
        ELSE
        BEGIN
            DECLARE @outputTable TABLE (oldId INT)
            UPDATE tb_document_loan
               SET status = #{status}
                 , req_user_id = #{req_user_id}
            OUTPUT DELETED.id INTO @outputTable
             WHERE d_id = #{document_id}
            SELECT @id = oldId FROM @outputTable
        END
        SELECT @id AS id
    </select>

    <insert id="saveDocumentLoan"
            parameterType="com.innon.education.library.document.repasitory.entity.DocumentLoanEntity">
        MERGE INTO tb_document_loan
        USING (SELECT 1 AS DUM) X
           ON (d_id = #{d_id})
         WHEN MATCHED THEN
       UPDATE SET status = #{status}
        <if test="req_user_id != null and req_user_id != ''">
            , req_user_id = #{req_user_id}
        </if>
         WHEN NOT MATCHED THEN
       INSERT (
           d_id,
           status
        <if test="req_user_id != null and req_user_id != ''">
           , req_user_id
        </if>
           , sys_reg_user_id
           , sys_reg_date
       ) VALUES (
           #{d_id},
           #{status}
        <if test="req_user_id != null and req_user_id != ''">
           , #{req_user_id}
        </if>
           , #{sys_reg_user_id}
           , getDate()
       );
    </insert>

    <!-- 문서요청 승인권자 등록 -->
    <insert id="saveDocumentLoanApprove"
            parameterType="com.innon.education.library.document.repasitory.entity.DocumentLoanApproveEntity">
        INSERT INTO tb_document_loan_approve (
            role_id,
            loan_id,
            approve_state
        ) VALUES (
            #{role_id},
            #{loan_id},
            #{approve_state}
        )
    </insert>

    <!-- 나의 업무 조회 -->
    <select id="findApproveMyworkList"
            parameterType="int"
            resultType="com.innon.education.library.document.repasitory.dto.ApproveMyworkDTO">
        SELECT tdla.approve_state
             , tdl.d_id
             , tdl.status
             , tdl.req_user_id
             , td.title
             , td.reg_user_id
             , td.code_id
             , td.document_num
             , td.write_year
             , td.document_cnt
          FROM tb_document_loan_approve tdla
         INNER JOIN tb_document_loan tdl
            ON (tdla.loan_id = tdl.id) and tdl.delete_at !='Y'
         INNER JOIN tb_document td
            ON (tdl.d_id = td.id)
         WHERE tdl.delete_at !='Y'
        <if test="role_id != null and role_id > 0">
           AND role_id = #{role_id}
        </if>
    </select>

    <!-- 문서 비고 등록 -->
    <insert id="saveDocumentMemo" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.innon.education.library.document.repasitory.model.DocumentMemo">
        INSERT INTO tb_document_memo (
            document_id,
            sys_reg_user_id,
            sys_reg_date,
        <if test="type != null  and type != '' ">
            type,
        </if>
            memo

        ) VALUES (
            #{document_id},
            #{sys_reg_user_id},
            getDate(),
        <if test="type != null  and type != '' ">
            #{type},
        </if>
            #{memo}

        )
    </insert>

    <!-- 문서 수정 -->
    <update id="updateDocument"
            parameterType="com.innon.education.library.document.repasitory.entity.DocumentEntity">
        UPDATE tb_document
           SET title = #{title}
             , use_flag = #{use_flag}
             , document_num = #{document_num}
             , dept_cd = #{dept_cd}
             , dept_nm = #{dept_nm}
             , reg_user_id = #{reg_user_id}
             , group_id = #{group_id}
             , write_user_id = #{write_user_id}
             , write_year = #{write_year}
             , write_date = #{write_date}
            <if test="expire_date != null">
                , expire_date = #{expire_date}
            </if>

        <if test="doc_code != null and doc_code != ''">
            ,doc_code = #{doc_code}
        </if>
        <if test="delete_at != null">
            , delete_at = #{delete_at}
        </if>
             , document_cnt = #{document_cnt}
             , binder = #{binder}
         WHERE id = #{id}
    </update>

    <!-- 문서 승인일 수정 -->
    <update id="updateDocumentConfirmDate"
            parameterType="int">
        UPDATE tb_document
           SET confirm_date = getDate()
             , confirm_yn = 'Y'
         WHERE id = #{id}
    </update>

    <!-- 문서 비고 목록 조회 -->
    <select id="findDocumentMemoList"
            parameterType="com.innon.education.library.document.repasitory.model.DocumentMemo"
            resultType="com.innon.education.library.document.repasitory.model.DocumentMemo">
        SELECT tdm.id
             , tdm.document_id
             , tdm.memo
             , tdm.sys_reg_date
             , CONVERT(CHAR(10), tdm.sys_reg_date, 23) AS convert_reg_date
             , tdm.sys_reg_user_id
             , ' [' + ed.dept_nm + ']' +ei.user_nm   AS sys_reg_user_nm
          FROM tb_document_memo tdm
          LEFT JOIN edu_insa ei
            ON (ei.user_id = tdm.sys_reg_user_id)
          LEFT JOIN edu_dept ed
            ON (ed.dept_cd = ei.dept_cd)
        <where>
            <if test="document_id != null and document_id > 0">
                AND tdm.document_id = #{document_id}
            </if>
            <if test="type != null and type !='' ">
                AND tdm.type = #{type}
            </if>
            <if test="documentMemoIds != null and documentMemoIds.length > 0">
                AND tdm.document_id in
                <foreach collection="documentMemoIds" item="document_id"  separator="," open="(" close=")">
                    #{document_id}
                </foreach>
            </if>
        </where>
         ORDER BY tdm.sys_reg_date DESC
    </select>

    <!-- 개발과정에서 TB_DOCUMENT 데이터 삭제를 위한 쿼리 -->
    <delete id="deleteTrashDocument">
        DELETE FROM tb_document
    </delete>
</mapper>